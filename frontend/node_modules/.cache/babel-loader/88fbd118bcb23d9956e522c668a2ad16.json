{"ast":null,"code":"import _defineProperty from \"/Users/Ivy/Documents/Rithm/Rithm_Exercise/redux-microblog/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Ivy/Documents/Rithm/Rithm_Exercise/redux-microblog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Ivy/Documents/Rithm/Rithm_Exercise/redux-microblog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Ivy/Documents/Rithm/Rithm_Exercise/redux-microblog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Ivy/Documents/Rithm/Rithm_Exercise/redux-microblog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Ivy/Documents/Rithm/Rithm_Exercise/redux-microblog/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Ivy/Documents/Rithm/Rithm_Exercise/redux-microblog/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Ivy/Documents/Rithm/Rithm_Exercise/redux-microblog/src/BlogPostForm.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport uuid from 'uuid/v4';\nimport { connect } from 'react-redux';\nimport { addPost, editPost } from './actions'; // import './BlogPostForm.css';\n\nvar BlogPostForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BlogPostForm, _Component);\n\n  function BlogPostForm(props) {\n    var _this;\n\n    _classCallCheck(this, BlogPostForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlogPostForm).call(this, props));\n    _this.state = {\n      title: _this.props.title,\n      description: _this.props.description,\n      body: _this.props.body\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BlogPostForm, [{\n    key: \"handleChange\",\n    value: function handleChange(evt) {\n      this.setState(_defineProperty({}, evt.target.name, evt.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(evt) {\n      evt.preventDefault(); // FIXME remember to make triggerAdd a boolean!!!\n\n      if (this.props.triggerAdd) {\n        // this.props.triggerAdd(this.state);\n        this.props.addPost();\n        this.props.history.push('/');\n      } else {\n        this.props.triggerEdit(this.props.id, this.state);\n        this.props.handleResetView();\n      }\n    }\n  }, {\n    key: \"showCancelEdit\",\n    value: function showCancelEdit() {\n      return React.createElement(\"button\", {\n        className: \"m-1 btn btn-secondary\",\n        onClick: this.props.handleResetView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Cancel\");\n    }\n  }, {\n    key: \"showCancelAdd\",\n    value: function showCancelAdd() {\n      return React.createElement(Link, {\n        className: \"m-1 btn btn-secondary\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Cancel\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"d-flex align-items-center flex-column col-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.props.triggerAdd ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Add New Post\") : React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Edit Post\")), React.createElement(\"form\", {\n        className: \"BlogForm col-4\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Title:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"col-12\",\n        id: \"title\",\n        name: \"title\",\n        value: this.state.title,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Description:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"col-12\",\n        id: \"description\",\n        name: \"description\",\n        value: this.state.description,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Body:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"col-12\",\n        id: \"body\",\n        name: \"body\",\n        value: this.state.body,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"m-1 btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Submit\")), this.props.triggerAdd ? this.showCancelAdd() : this.showCancelEdit());\n    }\n  }]);\n\n  return BlogPostForm;\n}(Component);\n\nBlogPostForm.defaultProps = {\n  title: '',\n  description: '',\n  body: ''\n};\n\nfunction mapStateToProps(reduxState) {\n  return {\n    posts: reduxState.posts\n  };\n}\n\nvar mapDispatchToProps = {\n  addPost: addPost,\n  editPost: editPost\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogPostForm);","map":{"version":3,"sources":["/Users/Ivy/Documents/Rithm/Rithm_Exercise/redux-microblog/src/BlogPostForm.js"],"names":["React","Component","Link","uuid","connect","addPost","editPost","BlogPostForm","props","state","title","description","body","handleChange","bind","handleSubmit","evt","setState","target","name","value","preventDefault","triggerAdd","history","push","triggerEdit","id","handleResetView","showCancelAdd","showCancelEdit","defaultProps","mapStateToProps","reduxState","posts","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport uuid from 'uuid/v4';\nimport { connect } from 'react-redux';\nimport { addPost, editPost } from './actions';\n// import './BlogPostForm.css';\n\nclass BlogPostForm extends Component {\n  static defaultProps={\n    title: '',\n    description: '',\n    body: '',\n  }\n\n  constructor(props){\n    super(props);\n    this.state = {\n      title: this.props.title,\n      description: this.props.description,\n      body: this.props.body,\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    // FIXME remember to make triggerAdd a boolean!!!\n    if(this.props.triggerAdd){\n      // this.props.triggerAdd(this.state);\n\n      this.props.addPost()\n      this.props.history.push('/');\n    } else {\n      this.props.triggerEdit(this.props.id, this.state);\n      this.props.handleResetView();\n    }\n  }\n\n  showCancelEdit() {\n    return <button className=\"m-1 btn btn-secondary\" onClick={this.props.handleResetView}>Cancel</button>\n  }\n\n  showCancelAdd() {\n    return <Link className=\"m-1 btn btn-secondary\"to='/'>Cancel</Link>\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex align-items-center flex-column col-10\">\n        <div className=\"col-4\">\n          {this.props.triggerAdd ? <h1>Add New Post</h1> : <h1>Edit Post</h1>}\n        </div>\n        <form className=\"BlogForm col-4\" onSubmit={ this.handleSubmit }>\n\n          <div className=\"form-group\">\n            <label htmlFor='title'>Title:</label><br/>\n            <input className=\"col-12\" id='title' name='title' value={ this.state.title } onChange={ this.handleChange } />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor='description'>Description:</label><br/>\n            <input className=\"col-12\" id='description' name='description' value={ this.state.description } onChange={ this.handleChange } />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor='body'>Body:</label><br/>\n            <textarea className=\"col-12\" id='body' name='body' value={ this.state.body } onChange={ this.handleChange } />\n          </div>\n\n          <button className=\"m-1 btn btn-primary\">Submit</button>\n        </form>\n          { this.props.triggerAdd ? this.showCancelAdd() : this.showCancelEdit() }\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(reduxState) {\n  return { posts: reduxState.posts };\n}\n\nconst mapDispatchToProps = {\n  addPost,\n  editPost\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogPostForm);"]},"metadata":{},"sourceType":"module"}