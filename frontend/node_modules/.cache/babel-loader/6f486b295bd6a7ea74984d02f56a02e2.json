{"ast":null,"code":"import _objectWithoutProperties from \"/Users/Ivy/Documents/Rithm/Rithm_Exercise/redux-microblog/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/Ivy/Documents/Rithm/Rithm_Exercise/redux-microblog/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Ivy/Documents/Rithm/Rithm_Exercise/redux-microblog/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/Ivy/Documents/Rithm/Rithm_Exercise/redux-microblog/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport { ADD_COMMENT, DELETE_COMMENT, ADD_POST, DELETE_POST, EDIT_POST } from \"./actionTypes\";\nvar INITIAL_STATE = {\n  posts: {}\n};\n\nfunction rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_COMMENT:\n      {\n        var _action$payload = action.payload,\n            postId = _action$payload.postId,\n            comment = _action$payload.comment;\n        var post = state.posts[postId];\n        var newComments = [].concat(_toConsumableArray(post.comments), [comment]);\n\n        var newPost = _objectSpread({}, post, {\n          comments: newComments\n        });\n\n        return _objectSpread({}, state, {\n          posts: _objectSpread({}, state.posts, _defineProperty({}, postId, newPost))\n        });\n      }\n\n    case DELETE_COMMENT:\n      {\n        var _action$payload2 = action.payload,\n            _postId = _action$payload2.postId,\n            commentId = _action$payload2.commentId;\n        var _post = state.posts[_postId];\n\n        var _newComments = _post.comments.filter(function (c) {\n          return c.id !== commentId;\n        });\n\n        var _newPost = _objectSpread({}, _post, {\n          comments: _newComments\n        });\n\n        return _objectSpread({}, state, {\n          posts: _objectSpread({}, state.posts, _defineProperty({}, _postId, _newPost))\n        });\n      }\n\n    case ADD_POST:\n      {\n        var _action$payload3 = action.payload,\n            _postId2 = _action$payload3.postId,\n            _post2 = _action$payload3.post;\n\n        var _newPost2 = _objectSpread({}, _post2, {\n          comments: []\n        });\n\n        return _objectSpread({}, state, {\n          posts: _objectSpread({}, state.posts, _defineProperty({}, _postId2, _newPost2))\n        });\n      }\n\n    case DELETE_POST:\n      {\n        var _postId3 = action.payload.postId;\n\n        var _state$posts = state.posts,\n            removedValue = _state$posts[_postId3],\n            newPostState = _objectWithoutProperties(_state$posts, [_postId3].map(_toPropertyKey));\n\n        return _objectSpread({}, state, {\n          posts: newPostState\n        });\n      }\n\n    case EDIT_POST:\n      {\n        var _action$payload4 = action.payload,\n            _postId4 = _action$payload4.postId,\n            _post3 = _action$payload4.post;\n        var comments = state.posts[_postId4].comments;\n\n        var _newPost3 = _objectSpread({}, _post3, {\n          comments: comments\n        });\n\n        return _objectSpread({}, state, {\n          posts: _objectSpread({}, state.posts, _defineProperty({}, _postId4, _newPost3))\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/Ivy/Documents/Rithm/Rithm_Exercise/redux-microblog/src/rootReducer.js"],"names":["ADD_COMMENT","DELETE_COMMENT","ADD_POST","DELETE_POST","EDIT_POST","INITIAL_STATE","posts","rootReducer","state","action","type","payload","postId","comment","post","newComments","comments","newPost","commentId","filter","c","id","removedValue","newPostState"],"mappings":";;;;;;;;;AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,SALF,QAMO,eANP;AAQA,IAAMC,aAAa,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAtB;;AAEA,SAASC,WAAT,GAAoD;AAAA,MAA/BC,KAA+B,uEAAvBH,aAAuB;AAAA,MAARI,MAAQ;;AAElD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKV,WAAL;AAAkB;AAAA,8BACYS,MAAM,CAACE,OADnB;AAAA,YACRC,MADQ,mBACRA,MADQ;AAAA,YACAC,OADA,mBACAA,OADA;AAEhB,YAAMC,IAAI,GAAGN,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAb;AAEA,YAAMG,WAAW,gCAAOD,IAAI,CAACE,QAAZ,IAAsBH,OAAtB,EAAjB;;AAEA,YAAMI,OAAO,qBAAQH,IAAR;AAAcE,UAAAA,QAAQ,EAAED;AAAxB,UAAb;;AAEA,iCAAYP,KAAZ;AAAmBF,UAAAA,KAAK,oBAAOE,KAAK,CAACF,KAAb,sBAAqBM,MAArB,EAA8BK,OAA9B;AAAxB;AACD;;AAED,SAAKhB,cAAL;AAAqB;AAAA,+BACWQ,MAAM,CAACE,OADlB;AAAA,YACXC,OADW,oBACXA,MADW;AAAA,YACHM,SADG,oBACHA,SADG;AAEnB,YAAMJ,KAAI,GAAGN,KAAK,CAACF,KAAN,CAAYM,OAAZ,CAAb;;AAEA,YAAMG,YAAW,GAAGD,KAAI,CAACE,QAAL,CAAcG,MAAd,CAAqB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,EAAF,KAASH,SAAb;AAAA,SAAtB,CAApB;;AACA,YAAMD,QAAO,qBAAQH,KAAR;AAAcE,UAAAA,QAAQ,EAAED;AAAxB,UAAb;;AAEA,iCAAYP,KAAZ;AAAmBF,UAAAA,KAAK,oBAAOE,KAAK,CAACF,KAAb,sBAAqBM,OAArB,EAA8BK,QAA9B;AAAxB;AAED;;AAED,SAAKf,QAAL;AAAe;AAAA,+BACYO,MAAM,CAACE,OADnB;AAAA,YACLC,QADK,oBACLA,MADK;AAAA,YACGE,MADH,oBACGA,IADH;;AAEb,YAAMG,SAAO,qBAAQH,MAAR;AAAcE,UAAAA,QAAQ,EAAE;AAAxB,UAAb;;AAEA,iCAAYR,KAAZ;AAAmBF,UAAAA,KAAK,oBAAOE,KAAK,CAACF,KAAb,sBAAqBM,QAArB,EAA8BK,SAA9B;AAAxB;AACD;;AAED,SAAKd,WAAL;AAAkB;AAAA,YACRS,QADQ,GACGH,MAAM,CAACE,OADV,CACRC,MADQ;;AAAA,2BAEoCJ,KAAK,CAACF,KAF1C;AAAA,YAEEgB,YAFF,gBAEPV,QAFO;AAAA,YAEmBW,YAFnB,2CAEPX,QAFO;;AAIhB,iCAAYJ,KAAZ;AAAmBF,UAAAA,KAAK,EAAEiB;AAA1B;AACD;;AAED,SAAKnB,SAAL;AAAgB;AAAA,+BACWK,MAAM,CAACE,OADlB;AAAA,YACNC,QADM,oBACNA,MADM;AAAA,YACEE,MADF,oBACEA,IADF;AAEd,YAAME,QAAQ,GAAGR,KAAK,CAACF,KAAN,CAAYM,QAAZ,EAAoBI,QAArC;;AACA,YAAMC,SAAO,qBAAQH,MAAR;AAAcE,UAAAA,QAAQ,EAARA;AAAd,UAAb;;AAEA,iCAAYR,KAAZ;AAAmBF,UAAAA,KAAK,oBAAOE,KAAK,CAACF,KAAb,sBAAqBM,QAArB,EAA8BK,SAA9B;AAAxB;AACD;;AAED;AAAS;AACP,iCAAYT,KAAZ;AACD;AAhDH;AAkDD;;AAED,eAAeD,WAAf","sourcesContent":["import {\n  ADD_COMMENT,\n  DELETE_COMMENT,\n  ADD_POST,\n  DELETE_POST,\n  EDIT_POST\n} from \"./actionTypes\";\n\nconst INITIAL_STATE = { posts: {} };\n\nfunction rootReducer(state = INITIAL_STATE, action) {\n\n  switch (action.type) {\n\n    case ADD_COMMENT: {\n      const { postId, comment } = action.payload;\n      const post = state.posts[postId];\n\n      const newComments = [...post.comments, comment];\n\n      const newPost = { ...post, comments: newComments };\n\n      return { ...state, posts: { ...state.posts, [postId]: newPost } };\n    }\n\n    case DELETE_COMMENT: {\n      const { postId, commentId } = action.payload;\n      const post = state.posts[postId];\n\n      const newComments = post.comments.filter(c => c.id !== commentId);\n      const newPost = { ...post, comments: newComments };\n\n      return { ...state, posts: { ...state.posts, [postId]: newPost } };\n\n    }\n\n    case ADD_POST: {\n      const { postId, post } = action.payload;\n      const newPost = { ...post, comments: [] };\n\n      return { ...state, posts: { ...state.posts, [postId]: newPost } };\n    }\n\n    case DELETE_POST: {\n      const { postId } = action.payload;\n      const { [postId]: removedValue, ...newPostState } = state.posts\n\n      return { ...state, posts: newPostState }\n    }\n\n    case EDIT_POST: {\n      const { postId, post } = action.payload;\n      const comments = state.posts[postId].comments;\n      const newPost = { ...post, comments };\n\n      return { ...state, posts: { ...state.posts, [postId]: newPost } };\n    }\n\n    default: {\n      return { ...state };\n    }\n  }\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}